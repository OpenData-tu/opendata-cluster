#!/bin/bash
source  ./config/aws_key.sh
source  ./config/env.sh
source  ./scripts/colors.sh
cat     ./scripts/.name 

make cluster_init

# Kops will set your kubectl context to od.o.thinkdeep.io

# Wait until the cluster is ready
(exec ./scripts/wait_cluster.sh)

# Wait for DNS to update
(exec ./scripts/wait_dns.sh)

# Install Kube Dashboard 
make install_ui 

# Install Heapster
make install_monitoring

# Install logging-elasticsearch
kubectl create -f ./component/logging/ 

# Create namespace Kafka
kubectl create ns kafka

# Install Zookeeper
kubectl create -f ./component/zookeeper/
(exec ./scripts/wait_zookeeper.sh)

# Install Kafka
kubectl create -f ./component/kafka/
(exec ./scripts/wait_kafka.sh)

# Create Kafka topics
(exec ./scripts/create_wait_kafka_topics.sh)

# Deploy Kafka-manager
kubectl create -f ./component/kafka-manager/

# Deploy elasticsearch Master
kubectl create -f ./component/elasticsearch/es-discovery-svc.yaml
kubectl create -f ./component/elasticsearch/es-svc.yaml
kubectl create -f ./component/elasticsearch/es-master.yaml

(exec ./scripts/wait_elasticsearch_master.sh)
# Deploy elasticsearch Clients and Data
kubectl create -f ./component/elasticsearch/es-client.yaml
kubectl create -f ./component/elasticsearch/es-data.yaml

kubectl annotate service elasticsearch dns.alpha.kubernetes.io/external=es.${DNS_ZONE}

# Deploy cronjobs
kubectl create -f ./crons/

# Logstash consumer
kubectl create -f ./component/docker-logstash-kafka-es/logstash-kafka-es-rc.yaml

cecho "Done." green 

kubectl cluster-info

echo
cecho "For auto completion run the following commands:" blue
cecho "source <(kubectl completion zsh)" green
cecho "source <(kops completion zsh)" green
echo

# Get the Dashboard's password
make get_ui_password
